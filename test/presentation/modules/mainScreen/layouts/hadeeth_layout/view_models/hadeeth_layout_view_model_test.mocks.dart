// Mocks generated by Mockito 5.4.6 from annotations
// in islamy_app/test/presentation/modules/mainScreen/layouts/hadeeth_layout/view_models/hadeeth_layout_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;
import 'package:stash/src/api/cache/cache.dart' as _i3;
import 'package:stash/src/api/cache/cache_stats.dart' as _i2;
import 'package:stash/src/api/cache/event/event.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCacheStats_0 extends _i1.SmartFake implements _i2.CacheStats {
  _FakeCacheStats_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [Cache].
///
/// See the documentation for Mockito's code generation for more information.
class MockCache extends _i1.Mock implements _i3.Cache<String> {
  @override
  bool get statsEnabled => (super.noSuchMethod(
        Invocation.getter(#statsEnabled),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i2.CacheStats get stats => (super.noSuchMethod(
        Invocation.getter(#stats),
        returnValue: _FakeCacheStats_0(
          this,
          Invocation.getter(#stats),
        ),
        returnValueForMissingStub: _FakeCacheStats_0(
          this,
          Invocation.getter(#stats),
        ),
      ) as _i2.CacheStats);

  @override
  String get name => (super.noSuchMethod(
        Invocation.getter(#name),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
        returnValueForMissingStub: _i4.dummyValue<String>(
          this,
          Invocation.getter(#name),
        ),
      ) as String);

  @override
  _i5.Future<int> get size => (super.noSuchMethod(
        Invocation.getter(#size),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<Iterable<String>> get keys => (super.noSuchMethod(
        Invocation.getter(#keys),
        returnValue: _i5.Future<Iterable<String>>.value(<String>[]),
        returnValueForMissingStub:
            _i5.Future<Iterable<String>>.value(<String>[]),
      ) as _i5.Future<Iterable<String>>);

  @override
  _i5.Future<String?> get(
    String? key, {
    _i3.CacheEntryDelegate<String>? delegate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [key],
          {#delegate: delegate},
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> put(
    String? key,
    String? value, {
    _i3.CacheEntryDelegate<String>? delegate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [
            key,
            value,
          ],
          {#delegate: delegate},
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> putIfAbsent(
    String? key,
    String? value, {
    _i3.CacheEntryDelegate<String>? delegate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putIfAbsent,
          [
            key,
            value,
          ],
          {#delegate: delegate},
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<String?> getAndPut(
    String? key,
    String? value, {
    _i3.CacheEntryDelegate<String>? delegate,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAndPut,
          [
            key,
            value,
          ],
          {#delegate: delegate},
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Stream<E> on<E extends _i6.CacheEvent<String>>() => (super.noSuchMethod(
        Invocation.method(
          #on,
          [],
        ),
        returnValue: _i5.Stream<E>.empty(),
        returnValueForMissingStub: _i5.Stream<E>.empty(),
      ) as _i5.Stream<E>);

  @override
  _i5.Future<bool> containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<String?> operator [](String? key) => (super.noSuchMethod(
        Invocation.method(
          #[],
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getAndRemove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getAndRemove,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
        returnValueForMissingStub: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
